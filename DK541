*PROCESS XOPTS(DLI),GOSTMT;
         /*PROCESS A,GOSTMT,NEST,OPT(TIME),AG,MI('+'),S,X,MAP; */
 DK541:   PROC(PCBIO,PCBPTRK)OPTIONS(MAIN);
 /*------------------------------------------------------------------*/
 /*                        DB  йатахесеым                            */
 /*------------------------------------------------------------------*/
 DCL PLIXOPT CHAR(39) VAR EXT  INIT ('ERRCOUNT(0)');
 DCL CZX3VDAT CHAR(6); FETCH CZXDATEP;
 DCL CZXDATEP ENTRY OPTIONS(INTER,ASM) ;

 DCL     BIT_LOG      BASED(ADDR(KSRKLOG))   BIT(8);
 DCL     KSRKATPIC    PIC'999' BASED(ADDR(KSMSKAT));
 DCL     WS_KEYARLOG   DEC FIXED (9,0) INIT(0);



  DCL KFIOROOT POINTER;
  DCL KFIOSADD POINTER;
  DCL TFIOROOT POINTER;
  DCL TFIOSADD POINTER;

 DCL KFYSIKON      CHAR(1)   INIT('u');
 DCL  SEGNAME          CHAR(8);
 DCL  WRKAREA          CHAR(400);
 DCL  RETCODE          FIXED BIN(31);
 DCL 1 WRK       BASED (ADDR(WRKAREA)),
       2  FILL1  CHAR(09),
       2  AKYROSI CHAR(01),
       2  POSO  FIXED(11,2),
       2  FILL2        CHAR(04),
       2  EP           CHAR(01),
       2  AREP         FIXED(09),
       2  FILL3        CHAR(90),
       2  POSPR     FIXED(11,2);


 DCL  REDEFLOG   BASED (ADDR(KSRARLOG))  BIT(40);
 DCL  REC_APO   FIXED         INIT(0) ;


 DCL ETVSAM  FILE RECORD INPUT  ENV(            FB RECSIZE(100)
                                                             );
 DCL   EOF_VSAM        PIC'9'       INIT(0);
 DCL     PRINTF FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT1 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT2 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT3 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT4 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT5 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT6 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     PRINT7 FILE  SEQUENTIAL OUTPUT ENV(FB RECSIZE(133) CTLASA);
 DCL     LINE                CHAR (133);
 DCL 1   LNX                 BASED(ADDR(LINE)),
      2  CTLCHR              CHAR(1)      INIT('1'),
      2  GRAMH               CHAR(132)    INIT(' ');

 % INCLUDE  KSDBMAP ;
   DCL  BITKATEP     BASED(ADDR(KSCKATEP))  BIT (80);
 % INCLUDE  DAYATNS ;
 % INCLUDE  DKSPACC ;
 DCL 1   LOGARIASMOS         BASED(ADDR(DSA_ARLOG  )),
      2  FILLER    CHAR(3) ,
      2  KARLOG    DEC FIXED (9,0) ;


   EXEC SQL
       INCLUDE T04CNV97;


   EXEC SQL
       INCLUDE T04FUL50;
 /* DCL 1  EPIXEIR   BASED(ADDR(T04FUL50.COD_DEP_UNI )),
          2  KODIKOS   CHAR(04),
          2  FILLER    CHAR(08) ; */

   DCL   KODIKOS    CHAR(04)  INIT(' ') ;
   EXEC SQL
        INCLUDE SQLCA  ;

    DCL 1  Syndik  based(addr(T04CNV97.NUM_AR_LOGAR)),
          2  syn01  char(16),
          2  syn02  PIC'(02)9'  ;

    DCL 1 WS_ARLOGAR_RR,
      2 W_ARLOG1   PIC'(8)9',
      2 W_ARLOG2   CHAR(8),
      2 W_ARLOG3   CHAR(2);
    DCL WS_ARLOGAR    CHAR(18)  BASED(ADDR(WS_ARLOGAR_RR));
    DCL CIDB_NO     FIXED     DEC (9,0 ) ;
    EXEC SQL  DECLARE CURS_CNV   CURSOR FOR
               SELECT COD_PELATH,
                      COD_EFARM,
                      NUM_AR_LOGAR,
                      COD_KATMA,
                      IND_OPEN_CLOSE
              FROM    T04CNV97
              WHERE   COD_EFARM   = '70'  AND
                      NUM_AR_LOGAR  LIKE :WS_ARLOGAR AND
                      COD_EMPRESA = '0012'
              ORDER BY COD_EFARM,NUM_AR_LOGAR
              WITH UR;



 DCL  PRIORITY  BUILTIN;/****  DATE SIMULATION DEFINED FUNCTION  ****/
 DATE: PROC IRREDUCIBLE RETURNS(CHAR(6)) ;
       CALL CZXDATEP          ( CZX3VDAT) ;
       RETURN (CZX3VDAT) ;
       END DATE ;
 /****        END OF MVS-MS INSERT        ****/

           /*  AREA VANDL/1 - PCB , FUNCTION  */
  DCL PLITDLI EXTERNAL ENTRY ;
  DCL PCBPTRK  POINTER ;
  DCL PCBIO    POINTER ;
  DCL FOUR STATIC FIXED BIN(31) INIT(4) ;
  DCL THREE STATIC FIXED BIN(31) INIT(3) ;

 DCL   EOCURS  BIT(1) INIT('0'B);
 DCL    TEMP_ARLOG   PIC'(08)9'  INIT(0) ;
 DCL     BINZROS             CHAR(4) INIT(' ') ;
 DCL     MHDEN               BIT(32) BASED(ADDR(BINZROS)) ;
 DCL     MARLOG              FIXED (09)  INIT(0);
 DCL     OLD_ACCNT           FIXED (09)  INIT(0);
 DCL     NEW_ACCNT           FIXED (09)  INIT(0);
 DCL     DEDUCTION           PIC'9' ;
 DCL 1   MARLOG1             BASED(ADDR(MARLOG)),
      2  LOGAR1              BIT(36),
      2  FILBIT              BIT(04);

 DCL     EKTCHECK            CHAR(100);
 DCL 1   REC_COUNTERS,
      2  ANYP_ME_KODIK_OXI_MEG_EPIX    FIXED (15)  INIT(0),
      2  FYS_ME_KODIK_OXI_MEG_EPIX   FIXED (15)  INIT(0),
      2  ANYP_ME_KODIK_MEG_EPIX    FIXED (15)  INIT(0),
      2  FYS_ME_KODIK_MEG_EPIX   FIXED (15)  INIT(0),
      2  REC_APO             FIXED (15)  INIT(0),
      2  REC_FYS             FIXED (15)  INIT(0),
      2  REC_CNT             FIXED (15)  INIT(0),
      2  REC_TAM             FIXED (15)  INIT(0),
      2  REC_KAT             FIXED (15)  INIT(0),
      2  REC_ROOT            FIXED (15)  INIT(0),
      2  REC_TOT             FIXED (15)  INIT(0),
      2  REC_ERROR           FIXED (15)  INIT(0),
      2  REC_CONTROL         FIXED (15)  INIT(0),
      2  REC_SAFETY          FIXED (15)  INIT(0),
      2  REC_CHKB            FIXED (15)  INIT(0),
      2  REC_STAT            FIXED (15)  INIT(0),
      2  REC_KYRW            FIXED (15)  INIT(0),
      2  REC_SUSP            FIXED (15)  INIT(0),
      2  REC_INTR            FIXED (15)  INIT(0),
      2  REC_GRD             FIXED (15)  INIT(0),
      2  REC_EURO            FIXED (15)  INIT(0),
      2  REC_CYP             FIXED (15)  INIT(0),
      2  REC_CYPE            FIXED (15)  INIT(0),
      2  REC_AKYR            FIXED (15)  INIT(0),
      2  REC_999             FIXED (15)  INIT(0),
      2  CursRows             FIXED (15)  INIT(0),
      2  PLITHOS             FIXED (15)  INIT(0),
      2  COUNT_SINGLE_5078   FIXED (15)  INIT(0),
      2  COUNT_SINGLE_5114   FIXED (15)  INIT(0),
      2  COUNT_SINGLE_5060   FIXED (15)  INIT(0),
      2  COUNT_NO_DEP_UNI   FIXED (15)  INIT(0),
      2  COUNT_MATCH        FIXED (15)  INIT(0),
      2  COUNT_NO_MATCH     FIXED (15)  INIT(0) ;
   /* -------       DB2 ERRORS DESCRIPTION      ------ */               00762000
       DCL 01  ERROR_FIELDS_DB2,                                        00764000
           02 LT_ASTER            CHAR(20)     INIT((20)'*'),           00765000
           02 LT_SQLSTATE_ERR     CHAR(10)     INIT('SQLSTATE: '),      00766000
           02 LT_SQLCODE_ERR      CHAR(09)     INIT('SQLCODE: '),       00767000
           02 RET_COD             PIC'S99999'  INIT(0),                 00768000
           02 LT_TABLE_ACCESS     CHAR(06)     INIT('TABLE:'),          00769000
           02 TABLE_ACCESS        CHAR(10)     INIT(' '),               00769100
           02 LT_ACTION           CHAR(07)     INIT('ACTION:'),         00769200
           02 ACTION              CHAR(20)     INIT(' '),               00769300
           02 LT_PERSON           CHAR(08)     INIT('PERSON :'),        00769400
           02 LT_GROUP            CHAR(07)     INIT('GROUP :');         00769500
                                                                        00769600
 DCL 1   SWITCHES,
      2  SWSUSP              FIXED (01)  INIT(0),
      2  SWOTHER             FIXED (01)  INIT(0),
      2  SWNOPAS             FIXED (01)  INIT(0),
      2  SWINTR              FIXED (01)  INIT(0),
      2  SWERROR             FIXED (01)  INIT(0),
      2  SWROOT              FIXED (01)  INIT(0),
      2  SWEURO              FIXED (01)  INIT(0),
      2  SWCYP               FIXED (01)  INIT(0);
 DCL  PR_LOGAR               PIC'(9)9'  INIT(0) ;
 DCL     TODAY               PIC '99.99.9999' INIT(0);
 DCL     WREC                PIC 'ZZZ.ZZZ.ZZZ.ZZZ.ZZ9' INIT(0);
 DCL     WPOSO               PIC 'ZZZ.ZZZ.ZZZ.ZZZ,V99-' INIT(0);
 DCL     II                  PIC '99'    INIT(0);
 DCL     I                   PIC '99'    INIT(0);
 DCL     J                   PIC '99'    INIT(0);
 DCL     MAX_LIM             PIC '99'  INIT(10) ;
 DCL    COUNT_5060             PIC '99'  INIT(00) ;
 DCL    COUNT_5114             PIC '99'  INIT(00) ;
 DCL    COUNT_5078             PIC '99'  INIT(00) ;

 DCL     SUBSTR              BUILTIN;
 DCL     ADDR                BUILTIN;
 DCL     ABS                 BUILTIN;
 DCL     ROUND               BUILTIN;

 %PAGE;
         /*----------------------------------------------------------*/
         /*                    MAIN  PROGRAM                         */
         /*----------------------------------------------------------*/

         KFIOROOT = ADDR(WRKAREA);
         KFIOSADD = ADDR(WRKAREA);
         OPEN FILE ( ETVSAM   ) ;
         TODAY = DAYA6S8(DATE);
         CTLCHR = ' ';
         REC_CNT   = REC_CNT + 1;
         OPEN  FILE(PRINTF) ;
         OPEN  FILE(PRINT1) ;
         OPEN  FILE(PRINT2) ; OPEN  FILE(PRINT4) ;
         OPEN  FILE(PRINT3) ; OPEN  FILE(PRINT5) ;
         OPEN  FILE(PRINT6) ; OPEN  FILE(PRINT7) ;

         CTLCHR = '1';
         GRAMH = '   сулжымиа  летану  DM.KDTRPEPX  KAI  T04FUL50 '!!
                  (20)' '!! '  DK541 ' ;
         WRITE FILE (PRINTF)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINTF)    FROM(LINE);

         CTLCHR = '1';
         GRAMH = '   коц/лои  амупаяйтои стгм  DBASE      '!!
                   ' '!!(20)' '!!' DK541 ' ;
         WRITE FILE (PRINT5)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT5)    FROM(LINE);


         CTLCHR = '1';
         GRAMH = '   коц/лои  жусийым  пяосыпым           '!!
                   ' '!!(20)' '!!' DK541 ' ;
         WRITE FILE (PRINT4)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT4)    FROM(LINE);


         CTLCHR = '1';
         GRAMH = '   коц/лои  амупаяйтои стгм  DBASE H жусийым п'!!
                   'поу евоум йыдийо лец. епивеия'!!(20)' '!!' DK541 ' ;
         WRITE FILE (PRINT6)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT6)    FROM(LINE);


         CTLCHR = '1';
         GRAMH = '   коц/лои жусийым пяосыпым г амупаяйтои стгм  DBASE'
                !! '  поу евоум йыдийо акка  OXI  лец. епивеия'
                !! ' '!!(20)' '!!' DK541 ' ;
         WRITE FILE (PRINT7)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT7)    FROM(LINE);


         CTLCHR = '1';
         GRAMH = '   коц/лои  сто  VSAM  поу дем евоум    '!!
                   ' COD_DEP_UNI  стом  T04FUL50'!!(10)' '!!' DK541 ' ;
         WRITE FILE (PRINT1)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT1)    FROM(LINE);

         CTLCHR = '1';
         GRAMH = '   коц/лои  сто  VSAM  поу EXOYN COD_DEP_UNI   '!!
                 'стом  T04FUL50  акка дем амтистоивеи  се '!!
                   ' лецакес епивеиягсеис  ' !! (10)' '!! ' DK541  ' ;
         WRITE FILE (PRINT2)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT2)    FROM(LINE);


         CTLCHR = '1';
         GRAMH = '   коц/лои  сто  VSAM  поу EXOYN COD_DEP_UNI   '!!
                 'стом  T04FUL50  йаи амтистоивеи  се '!!
                   ' лецакес епивеиягсеис  ' !! (10)' '!! ' DK541  ' ;
         WRITE FILE (PRINT3)    FROM(LINE);
         CTLCHR = ' ';
         GRAMH=' '!!(100)'-';
         WRITE FILE (PRINT3)    FROM(LINE);


 ON ENDFILE ( ETVSAM )
            BEGIN;
                  EOF_VSAM = 1;
                  GOTO EXIT1 ;
            END;
  /*************   READ  CTRL  RECORD   *************************/
         READ FILE ( ETVSAM ) INTO ( DSA_REC ) ; OLD_ACCNT = 0;


 NXTREAD:         /* дIABAсMA EпOMENOY RECORD  */
         READ FILE ( ETVSAM ) INTO ( DSA_REC ) ;
         REC_TOT=REC_TOT+1; KSRFN = ' ';

          MARLOG = KARLOG;
          FILBIT = '1111'B;

          NEW_ACCNT = MARLOG ;
          IF NEW_ACCNT = OLD_ACCNT THEN  GOTO NXTREAD;
          ELSE  OLD_ACCNT = NEW_ACCNT ;

          SEGNAME = 'KROOTSEG';
          EXEC DLI
                 GU USING PCB(2)
                 SEGMENT (KROOTSEG)
                 WHERE (KSRARLOG=MARLOG)
                 INTO (WRKAREA);

          IF DIBSTAT ^=' ' THEN DO;
                CTLCHR = ' ';
                GRAMH = MARLOG    !! ' ANYпAPKTOс кOц/сMOс KAT/сEыN';
                WRITE FILE (PRINT5) FROM (LINE);
                REC_APO = REC_APO + 1;
           /*   GOTO NXTREAD ; */
          END;

          IF KSRFN  = KFYSIKON   THEN DO;
                CTLCHR = ' ';
                GRAMH = MARLOG    !! ' кOц/сMOс жусийоу пяосыпоу   ';
                WRITE FILE (PRINT4) FROM (LINE);
                REC_FYS = REC_FYS + 1;
            /*  GOTO NXTREAD ;   */
          END;

         /*****************************************************/
         CIDB_NO = 0 ;
         CALL  GET_CIDB_NO;

         T04FUL50.COD_DEP_UNI = ' ';
         EXEC SQL
            SELECT COD_DEP_UNI
         INTO
           :T04FUL50.COD_DEP_UNI
         FROM    T04FUL50
         WHERE   COD_PERSONA = :CIDB_NO             AND
    /*   WHERE   COD_PERSONA = :T04CNV97.COD_PELATH AND */
                 COD_EMPRESA = '0012'
         WITH UR;

         IF SQLCODE = 100 THEN DO;
           GRAMH = '  '!! MARLOG !! ' CIDB NO= '!! CIDB_NO ;
           WRITE FILE (PRINT1)    FROM(LINE);
           COUNT_NO_DEP_UNI  = COUNT_NO_DEP_UNI + 1;

           ACTION = 'дем упаявеи CODDEPUNI' ;
           TABLE_ACCESS = 'T04FUL50'  ;
           CALL ROUT_DB2_ERROR;
           GOTO  NXTREAD ;
         END;
         ELSE DO;
              IF SQLCODE ^= 0 THEN DO;
                  ACTION = 'PROBLEM IN TABLE ' ;
                  TABLE_ACCESS = 'T04FUL50'  ;
                  CALL ROUT_DB2_ERROR;
                  GOTO  NXTREAD ;
              END;
         END;

         KODIKOS = ' ';
         KODIKOS = SUBSTR(T04FUL50.COD_DEP_UNI ,1,4) ;
         IF MARLOG = 80040300  THEN DO;
            CTLCHR = ' ' ;
            GRAMH = ' O коцаяиаслос ' !!MARLOG !!
                            '   EXEI KODIKO  '!!KODIKOS!!
                       '  BEFORE SELECT ';
            WRITE FILE (PRINT2)    FROM(LINE);
         END ;
         SELECT (KODIKOS) ;
           WHEN ('0929','0941','0987','0990', '0916' ) DO;
         IF MARLOG = 80040300  THEN DO;
            CTLCHR = ' ' ;
            GRAMH = ' O коцаяиаслос ' !!MARLOG !!
                            '   EXEI KODIKO  '!!KODIKOS!!
                       '  AFTER  WHEN   ';
            WRITE FILE (PRINT2)    FROM(LINE);
         END ;
              COUNT_MATCH = COUNT_MATCH + 1 ;
              CTLCHR = ' ' ;
              GRAMH = ' O коцаяиаслос ' !!MARLOG !!' CIDB = '!!
                       CIDB_NO !!' евеи йыдийо '!!KODIKOS;
              WRITE FILE (PRINT3)    FROM(LINE);
              /****  +++++++++++++++++++++++++++++++   *******/
              IF DIBSTAT ^=' ' THEN DO;
                CTLCHR = ' ';
                GRAMH = MARLOG    !! ' ANYпAPKTOс кOц/сMOс KAT/сEыN '!!
                     ' CIDB = ' !! CIDB_NO !! ' евеи йыд. лец. епив '!!
                     KODIKOS ;
                WRITE FILE (PRINT6) FROM (LINE);
                ANYP_ME_KODIK_MEG_EPIX = ANYP_ME_KODIK_MEG_EPIX + 1;
              END;

              IF KSRFN  = KFYSIKON   THEN DO;
                CTLCHR = ' ';
                GRAMH = MARLOG    !! ' кOц/сMOс жусийоу пяосыпоу   '!!
                     ' CIDB = ' !! CIDB_NO !! ' евеи йыд. лец. епив '!!
                     KODIKOS ;
                WRITE FILE (PRINT6) FROM (LINE);
                FYS_ME_KODIK_MEG_EPIX = FYS_ME_KODIK_MEG_EPIX + 1;
              END;

           END ;
           OTHERWISE DO;
         IF MARLOG = 80040300  THEN DO;
            CTLCHR = ' ' ;
            GRAMH = ' O коцаяиаслос ' !!MARLOG !!
                            '   EXEI KODIKO  '!!KODIKOS!!
                       '  AFTER  OTHERWISE  DO '  ;
            WRITE FILE (PRINT3)    FROM(LINE);
         END ;
              COUNT_NO_MATCH = COUNT_NO_MATCH + 1 ;
              CTLCHR = ' ' ;
              GRAMH = ' O коцаяиаслос ' !!MARLOG !!' CIDB = '!!
                       CIDB_NO !!' евеи йыдийо '!!KODIKOS;
              WRITE FILE (PRINT2)    FROM(LINE);
              /****  +++++++++++++++++++++++++++++++   *******/
              IF DIBSTAT ^=' ' THEN DO;
                CTLCHR = ' ';
                GRAMH = MARLOG    !! ' ANYпAPKTOс кOц/сMOс KAT/сEыN '!!
                     ' CIDB = ' !! CIDB_NO !! ' евеи йыд. лец. епив '!!
                     KODIKOS ;
                WRITE FILE (PRINT7) FROM (LINE);
          ANYP_ME_KODIK_OXI_MEG_EPIX = ANYP_ME_KODIK_OXI_MEG_EPIX + 1;
              END;

              IF KSRFN  = KFYSIKON   THEN DO;
                CTLCHR = ' ';
                GRAMH = MARLOG    !! ' кOц/сMOс жусийоу пяосыпоу   '!!
                     ' CIDB = ' !! CIDB_NO !! ' евеи йыд. лец. епив '!!
                     KODIKOS ;
                WRITE FILE (PRINT7) FROM (LINE);
          FYS_ME_KODIK_OXI_MEG_EPIX = FYS_ME_KODIK_OXI_MEG_EPIX + 1;
              END;

           END ;
         END ;  /* SELECT */
 %SKIP(2);
      GOTO NXTREAD;
 %PAGE;
 /*-------------------------------------------------*/
 GET_CIDB_NO   :  PROC ;

   CTLCHR = ' ';
   GRAMH=' ENTER  GET_CIDB_NO  ' ;
 /*WRITE FILE (PRINT1)    FROM(LINE);  */

   TEMP_ARLOG = KARLOG;
   W_ARLOG1 = TEMP_ARLOG;
   W_ARLOG2 = '';
   W_ARLOG3 = '%%';

   EXEC SQL  OPEN CURS_CNV;
   /*
    trace_mes =  ' AFTER  OPEN  CURSOR  '!! SQLCODE ;
    EXEC  SQL WRITEQ TS QUEUE
    ('DIMI') FROM (trace_mes)  LENGTH(50); */

   IF SQLCODE ^= 0 THEN DO;
      TABLE_ACCESS = 'т04CNV97';
      IF SQLCODE = 100 THEN DO;
         ACTION = 'дем амоицеи CURSOR ';
         CALL ROUT_DB2_ERROR;
      END;
      ELSE  DO;
           ACTION = 'PROBLEM IN TABLE ';
           CALL ROUT_DB2_ERROR;
      END ;
   END;


   EOCURS = '0'B; CursRows       = 0;
   DO WHILE (   ^ EOCURS             ) ;
      CALL ROUT_FETCH;
   END;

   EXEC SQL
      CLOSE CURS_CNV;

   IF SQLCODE ^= 0 THEN DO;
      TABLE_ACCESS = 'т04CNV97';
      IF SQLCODE = 100 THEN DO;
           ACTION = 'дем йкеимеи CURSO';
           CALL ROUT_DB2_ERROR;
      END;
      ELSE  DO;
           ACTION = 'PROBLEM IN TABLE ';
           CALL ROUT_DB2_ERROR;
      END ;
   END;

   CTLCHR = ' ';
   GRAMH=' EXIT   GET_CIDB_NO  ' ;
 /*WRITE FILE (PRINT1)    FROM(LINE);    */

 END  GET_CIDB_NO ;
  /* ---------------------------------------------- */
 /*  +++++++++++++++++++++++++++++++++++++++++++++++ */
 ROUT_FETCH : PROC;
   CTLCHR = ' ';
   GRAMH=' ENTER  ROUT_FETCH   '  ;
 /*WRITE FILE (PRINT1)    FROM(LINE);   */
   EXEC SQL
        FETCH CURS_CNV
        INTO
           :T04CNV97.COD_PELATH,
           :T04CNV97.COD_EFARM,
           :T04CNV97.NUM_AR_LOGAR,
           :T04CNV97.COD_KATMA,
           :T04CNV97.IND_OPEN_CLOSE;

   IF SQLCODE = 100 THEN DO;
      GO TO END_FETCH;
   END;

   IF SQLCODE ^= 0 THEN DO;
      TABLE_ACCESS = 'T04CNV97';
      CALL  ERRHANDLING ;
   END;

   CursRows     =  CursRows + 1 ;
   IF   syn02  =  01  & CursRows = 1    THEN do;
     CIDB_NO = T04CNV97.COD_PELATH ;   EOCURS = '1'B;
   end ;
   IF   SYN02  >  01  & CursRows = 1    THEN DO;
      PR_LOGAR = MARLOG  ;
      GRAMH =  (05)'*'!! PR_LOGAR !!'дем евеи йуяио дийаиоуво сто '!!
                ' CIDB ' ;

      WRITE FILE (PRINTF) FROM (LINE);

   end ;


   CTLCHR = ' ';
   GRAMH=' EXIT   ROUT_FETCH   '   ;
 /*WRITE FILE (PRINT1)    FROM(LINE);    */

 END_FETCH:
      EOCURS = '1'B;
 END ROUT_FETCH;
       /*------------------------------------------------*/
 /*-------------------------------------------------*/
 /*******************************************************************/
 ERRHANDLING : PROC ;
         ACTION = 'PROBLEM IN TABLE ';
         CALL ROUT_DB2_ERROR;
 END ERRHANDLING ;
 /* -------------------------------------------------------------- */   03700100
 ROUT_DB2_ERROR: PROC;                                                  03702000
                                                                        03706000
           CTLCHR = ' ';
           RET_COD = SQLCODE;                                           03707000
           GRAMH     = '  '!!LT_ASTER !!                                03708000
                       LT_SQLSTATE_ERR !! SQLSTATE !!' '!!              03709000
                       LT_SQLCODE_ERR !! RET_COD !!' '!!                03709100
                       LT_TABLE_ACCESS !! TABLE_ACCESS !!               03709200
                       LT_ACTION !! ACTION ;                            03709300
          CALL PUTLAUH;                                                 03709600
  END ROUT_DB2_ERROR;                                                   03709800

 /* -------------------------------------------------------------- */

 PUTLAUH: PROC ;
         WRITE FILE(PRINT1) FROM(LINE) ;
         GRAMH   = (132)' ' ;
         END PUTLAUH ;



 /*  +++++++++++++++++++++++++++++++++++++++++++++++ */
  /* ----------------------------------------------------------- */
 EXIT1:
   CTLCHR = ' ';
   GRAMH =  (100)'-' ;
   WRITE FILE (PRINTF) FROM (LINE);

   CTLCHR = ' ';
   WREC = REC_TOT;
   GRAMH = '**rYNOkIKA dIABArTHKAN     '!! WREC;
   WRITE FILE (PRINTF) FROM (LINE);

   CTLCHR = ' ';
   WREC = COUNT_MATCH ;
   GRAMH = '**  таияианам   (PRINT3)   '!! WREC;
   WRITE FILE (PRINTF) FROM (LINE);

   CTLCHR = ' ';
   WREC = REC_APO     ;
   GRAMH = '**  коц/лои  амупаяйтои стгм DB (PRINT5) '!! WREC;
   WRITE FILE (PRINTF) FROM (LINE);


   CTLCHR = ' ';
   WREC = ANYP_ME_KODIK_OXI_MEG_EPIX ;
   GRAMH = '**  коц/лои  амупаяйтои стгм DB ле йыд. ови лецак. '!!
            ' епивеиягсгс  (PRINT7) '!! WREC;
   WRITE FILE (PRINTF) FROM (LINE);

   CTLCHR = ' ';
   WREC = ANYP_ME_KODIK_MEG_EPIX;
   GRAMH = '**  коц/лои  амупаяйтои стгм DB ле йыд.  лецак. '!!
            ' епивеиягсгс  (PRINT6)  '!! WREC;
   WRITE FILE (PRINTF) FROM (LINE);


   CTLCHR = ' ';
   WREC = REC_FYS     ;
   GRAMH = '**  коц/лои  жусийым пяосыпым (PRINT4) '!! WREC;
   WRITE FILE (PRINTF) FROM (LINE);


   CTLCHR = ' ';
   WREC = FYS_ME_KODIK_OXI_MEG_EPIX  ;
   GRAMH = '**  коц/лои  жусийым пяосыпым ME йыд. ови лецак. епивеия'
            !!' (PRINT7 ) ' !! WREC;
   WRITE FILE (PRINTF) FROM (LINE);


   CTLCHR = ' ';
   WREC = FYS_ME_KODIK_MEG_EPIX;
   GRAMH = '**  коц/лои  жусийым пяосыпым ME йыд.  лецак. епивеия  '
           !!' (PRINT6 ) '  !! WREC;
   WRITE FILE (PRINTF) FROM (LINE);

   WREC = COUNT_NO_MATCH ;
   GRAMH = '**  коц/лои  сто VSAM  поу евоум  DEPUNI  акка дем  '
     !!' амтистоивеи се лецакг  епивеиягсг стом  T04FUL50  (PRINT2) '
             !!WREC ;
   WRITE FILE (PRINTF) FROM (LINE);

   WREC = COUNT_NO_DEP_UNI ;
   GRAMH = '**  коц/лои  сто VSAM  поу дем евоум  DEP_UNI '
            !! '  стом  T04FUL50 (PRINT1)  '  !! WREC ;
   WRITE FILE (PRINTF) FROM (LINE);


   CTLCHR = ' ';
   GRAMH =  (100)'-' ;
   WRITE FILE (PRINTF) FROM (LINE);


   CLOSE FILE(PRINTF) ,       FILE(PRINT1) ,       FILE(PRINT2) ;
      CLOSE FILE( ETVSAM ) ,  FILE(PRINT3)       ;
      CLOSE FILE(PRINT4) ;
      CLOSE FILE(PRINT5) ;
      CLOSE FILE(PRINT6) ;
      CLOSE FILE(PRINT7) ;
  END  DK541;
