  /*---------------------BE101--------------------------------------*/
  /*                     pli-db2                                    */
  /*----------------------------------------------------------------*/
  /*----------------- –—œ”œ◊« –—œ”œ◊« HARD-CODED -------------------*/
  /*----------------------------------------------------------------*/
  /*          –ÒÔÛÔ˜ﬁ Â˜ÂÈ Hard-Coded ‘ÔıÚ  ˘‰ÈÍÔ˝Ú Ù˘Ì –≈  Í·Ù·ÛÙ. */
  /*----------------------------------------------------------------*/
  /*----------------------------------------------------------------*/
  /*          –ÒÔÛÔ˜ﬁ Â˜ÂÈ Hard-Coded ‘ÔıÚ  ˘‰ÈÍÔ˝Ú Ù˘Ì –≈  Í·Ù·ÛÙ. */
  /*----------------------------------------------------------------*/
  /*-NPK 08-10-2007 ------------------------------------------------*/
  /*----------------------------------------------------------------*/
  /*-NPK 03-01-2008 Õ≈œ…  Ÿƒ… œ… 643,644,646,655,656  --------------*/
  /*----------------------------------------------------------------*/
  /*-KTH 20-06-2008 Õ≈œ…  Ÿƒ… œ… 657,658,659,639,642,645 -----------*/
  /*----------------------------------------------------------------*/
  /*-NPK 02-01-2009 ƒ…œ—»Ÿ”«     RC FIXED (3)  NOT FIXED (1)--------*/
  /*----------------------------------------------------------------*/
  BE101 : PROC  OPTIONS ( MAIN );
  DCL PLIXOPT CHAR(39) VAR EXT  INIT ('ERRCOUNT(0)');
  DCL CZX3VDAT CHAR(6); FETCH CZXDATEP;
  DCL CZXDATEP ENTRY OPTIONS(INTER,ASM) ;
  DCL   CHECK2D FILE RECORD DIRECT UPDATE KEYED ENV ( VSAM );
  DCL   CHECK2  FILE RECORD SEQUENTIAL INPUT KEYED ENV ( VSAM GENKEY );
  DCL   PRT FILE RECORD OUTPUT  ENV(FB RECSIZE(133)CTLASA);
  DATE: PROC IRREDUCIBLE RETURNS(CHAR(6)) ;

        CALL CZXDATEP          ( CZX3VDAT) ;
        RETURN (CZX3VDAT) ;
        END DATE ;
 /*------------------------------------------------------------------*/
 /*      VSAM KSDS CHECK2  FILE                                      */
 /*      RECORD  CHECK2  FILE FOR TP        RECSIZE=90   KEYSIZE=14  */
 /*------------------------------------------------------------------*/
  DCL     RLENGTH             FIXED BIN(15)    INIT(90);
  DCL     SAVE_HEADER         CHAR(90) INIT('');
  DCL     IOAREA              CHAR(90);
  DCL 1   IOAREA1     BASED(ADDR(IOAREA)),  /* CONTROL RECORD */
      2  EEKEY1              PIC '(14)9',   /* API»MO” KATAXŸPH”H”   */
                                            /* CONTROL RECORD +      */
                                            /* DATE A√OPA” E–IT.     */
                                            /* ANE”TPAMENH  (YYMMDD) */
      2  EETYPE1             PIC '9',       /* RECORD TYPE           */
                                            /* 1=CONTROL RECORD      */
                                            /* 2=RECORD E–ITA√H”     */
      2  EEAGOR1             CHAR(01),      /* ENƒEIŒH E–I”TP.E–ITA√.*/
                                            /* EINAI –ANTA  'E'      */
      2  EEFACC1             PIC '(8)9',    /* –PŸTO” ƒIA»E”IMO”     */
                                            /* API»MO” E–ITA√H”      */
      2  EENUMB1             PIC '(5)9',    /* ”YNOÀ.API»MO” E–I”TP. */
                                            /* E–ITA√ŸN ANA KAT/MA   */
      2  EETOTAL1            FIXED(15,2),   /* ”YNOÀ.–O”O E–I”TPE÷OM.*/
                                            /* E–ITA√ŸN ANA KAT/MA   */
      2  EEFIL1              CHAR(53);      /* FILLER...             */
      /*-------------------------------------------------------------*/
         DCL 1 VSAMKEY1   BASED(ADDR(EEKEY1)) ,
               2 KEYKATMA1  PIC'(3)9',
               2 KEYFILL    PIC'(5)9',
               2 KEYDATE1   PIC'(6)9';
  DCL 1   IOAREA2     BASED(ADDR(IOAREA)), /* RECORD E–ITA√H” */
      2  EEKEY2              PIC '(14)9',   /* API»MO” KATAXŸPH”H”   */
                                            /* E–ITA√H”   +          */
                                            /* DATE A√OPA” E–ITA√H”  */
                                            /* ANE”TPAMENH  (YYMMDD) */
      2  EETYPE2             PIC '9',       /* RECORD TYPE           */
                                            /* 1=CONTROL RECORD      */
                                            /* 2=RECORD E–ITA√H”     */
      2  EEAGOR2             CHAR(01),      /* ENƒEIŒH E–I”TP.E–ITA√.*/
                                            /* EINAI –ANTA  'E'      */
      2  EESTATUS            PIC '9',       /* RECORD STATUS         */
                                            /* 0=”E I”XY 1=AKYPŸMENO */
      2  EEBANK2             PIC '999',     /* TPA–EZA EKƒ.E–ITA√H”  */
      2  EEBRANCH2           PIC '999',     /* KATA”THMA EKƒ.E–ITA√. */
      2  EEACCN2             PIC '(13)9',   /* API»MO” ÀO√APIA”MOY   */
      2  EECHECKN2           PIC '(9)9',    /* API»MO” E–ITA√H”      */
      2  EEDATE2A            PIC '(6)9',    /* DATE EKƒO”H” E–ITA√H” */
                                            /* ANE”TPAMENH  (YYMMDD) */
      2  EEAMOUNT            FIXED(15,2),   /* –O”O E–ITA√H”         */
      2  EECOURR             CHAR(03),      /* KŸƒIKO” NOMI”MATO”    */
      2  EESIGN2             PIC '99',      /* ENƒEIŒH E–ITA√H”      */
                                            /* 01 ===> AKAÀY–TH      */
                                            /* 02 ===> E–I”TPE÷OMENH */
                                            /*     √IA AÀÀOY” ÀO√OY” */
      2  EERTERM             CHAR(07),      /* TERMINAL-ID  E√√PA÷H” */
      2  EECDATE             PIC '(6)9',    /* HMEPOMHNIA AKYPŸ”H”   */
                                            /* ANE”TPAMENH  (YYMMDD) */
                                            /* H THN TPA–EZA KAI TO  */
                                            /* KAT/MA –OY A√OPA”E THN*/
                                            /* E–ITA√H               */
      2  EECTERM             CHAR(07),      /* TERMINAL-ID AKYPŸ”H”  */
      2  EEREALBR            PIC'999',      /* REAL PAYING BRANCH    */
      2  EEFIL2              CHAR(03);      /* FILLER...             */
  DCL   NEW_KEY      CHAR(14)  ;
  DCL 1 VSAMKEY2 ,
       2 KEYNUM2  PIC'(8)9',
       2 KEYDATE2 PIC'(6)9';
  DCL     LINE                CHAR (133);
  DCL 1   LNX                 BASED(ADDR(LINE)),
      2  CTLCHR              CHAR(1)      INIT('1'),
      2  GRAMH               CHAR(132)    INIT(' ');
     /*-------------------------------------------------------------*/
     /*=============================================================*/

  /* ’ÔË›ÙÔıÏÂ ¸ÙÈ ·ıÙÔÈ Ë· ÂﬂÌ·È ÔÈ Í˘‰ÈÍÔﬂ Ù˘Ì ÂÍ ÌÍ 01-10-2007*/
  DCL  PEK_LIMIT FIXED(3) INIT(21);
  DCL 1 PINAX_PEK(PEK_LIMIT)  ,/*                           */
       2 PEK_KATMA    CHAR(3) ,
       2 PEK_IO       CHAR(90),
       2 PEK_EENUMB1  PIC '(5)9', /*”YNOÀO E–I”TPE÷OMENŸÕ ≈–…‘¡√ŸÕ*/
       2 PEK_EETOTAL1 FIXED(15,2),/*”YNOÀ.–O”O E–I”TPE÷OM.*/
       2 PEK_MAX      FIXED(4),   /*Ã≈√…”‘œ” ¡¡ ≈–…‘¡√«” ”‘œ –≈ */
       2 PEK_INS_UPD  FIXED(1);   /*’–π—◊≈ ”‘œ VSAM 1=Õ¡… 2=œ◊… */
  PINAX_PEK = '';
  PINAX_PEK(1).PEK_KATMA  = '649';
  PINAX_PEK(2).PEK_KATMA  = '650';
  PINAX_PEK(3).PEK_KATMA  = '651';
  PINAX_PEK(4).PEK_KATMA  = '640';
  PINAX_PEK(5).PEK_KATMA  = '641';
  PINAX_PEK(6).PEK_KATMA  = '647';
  PINAX_PEK(7).PEK_KATMA  = '648';
  PINAX_PEK(8).PEK_KATMA  = '652';
  PINAX_PEK(9).PEK_KATMA  = '653';
  PINAX_PEK(10).PEK_KATMA = '654';
  PINAX_PEK(11).PEK_KATMA = '643';/*NPK 03-01-2008 FROM MARCH START*/
  PINAX_PEK(12).PEK_KATMA = '644';/*NPK 03-01-2008 FROM MARCH START*/
  PINAX_PEK(13).PEK_KATMA = '646';/*NPK 03-01-2008 FROM MARCH START*/
  PINAX_PEK(14).PEK_KATMA = '655';/*NPK 03-01-2008 FROM MARCH START*/
  PINAX_PEK(15).PEK_KATMA = '656';/*NPK 03-01-2008 FROM MARCH START*/
  PINAX_PEK(16).PEK_KATMA = '657';
  PINAX_PEK(17).PEK_KATMA = '658';
  PINAX_PEK(18).PEK_KATMA = '659';
  PINAX_PEK(19).PEK_KATMA = '639';
  PINAX_PEK(20).PEK_KATMA = '642';
  PINAX_PEK(21).PEK_KATMA = '645';


  DCL 1 EPITAGES(*) CONTROLLED  ,/*        */
       2 EPIT_KATMA CHAR (03),
       2 EPIT_IO    CHAR (90),
       2 EPIT_FOUND FIXED(01);

  DCL COUNT_PEK FIXED(15) INIT(0);

  DCL READ_KATMA  CHAR (3)  INIT('');
  DCL IND         FIXED(15) INIT(0);
  DCL EOF         FIXED(1)  INIT(0);
  DCL PEK_FLG     FIXED(3)  INIT(0);
  DCL RET_ERROR   FIXED(1)  INIT(0);
  DCL RET_KATMA   CHAR(3);
  DCL PIC_EEACCN2 PIC '(8)9';
  DCL COUNT_EPIT FIXED(15) INIT(0);
  DCL  I      FIXED (15);
  DCL  SAVE_I FIXED (15);
  DCL 1 MY_REC CONTROLLED  ,
        2  C_KATMA   CHAR (3) ,
        2  C_IOAREA  CHAR(90) ;

   DCL 1 COUNTERS ,
      2 CNT_REC_READ               PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_REC_REJECT             PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_REC_PROCCED            PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_HEADER                 PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_DETAIL                 PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_EPITAGON               PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_INSERTED_PEK           PIC 'ZZZ.ZZZ.ZZ9' ,
      2 CNT_UPDATED_PEK            PIC 'ZZZ.ZZZ.ZZ9' ;

   COUNTERS  = '';
  EXEC SQL INCLUDE CTHBCUDE ;
  EXEC SQL INCLUDE T04CNV97 ;
  EXEC SQL INCLUDE SQLCA ;
  /*================================================================*/
   DCL (ONCODE ,ADDR,SUBSTR,CHAR,NULL,DATETIME)  BUILTIN ;
  /*------------------------------------------------------------------*/
   EOF      =  0  ;
   ON ENDFILE ( CHECK2 )
      BEGIN;
        EOF = 1   ;
        /*CLOSE FILE(CHECK2);*/
        OPEN FILE(CHECK2D);
      END;
  /*------------------------------------------------------------------*/
   ON KEY ( CHECK2D )
      BEGIN;
        SELECT ( ONCODE );
           WHEN ( 51 )                              /* KEY NOT FOUND */
             GRAMH= 'CANNOT FIND SPECIFIED KEY : '!!
                 KEYKATMA1  !!' '!!
                 KEYFILL    !!' '!!
                 KEYDATE1  ;
           WHEN ( 52 )                              /* DUPLICATE KEY */
             GRAMH= 'DUPLICATE KEY : '!!KEYNUM2!!KEYDATE2;
           WHEN ( 53 )                               /*     KEY LESS */
             GRAMH= 'FOR SEQUENTIAL WRITE, KEY OUT OF SEQUENCE :'!!
                   ' '!!KEYNUM2!!KEYDATE2;
           WHEN ( 55 )                               /* INVALID  KEY */
             GRAMH= 'INVALID KEY : '!!KEYNUM2!!KEYDATE2;
           WHEN ( 56 )                               /* OUT OF LIMITS*/
             GRAMH= 'ATTEMPT TO READ A KEY OUTSIDE THE LIMITS OF'!!
                        ' THE DATA SET : '!!KEYNUM2!!KEYDATE2;
           WHEN ( 57 )                               /* NO SPACE     */
             GRAMH= 'FOR WRITE, NO SPACE TO ADD A RECORD : '!!
                   KEYNUM2!!KEYDATE2;
           WHEN ( 58 )                               /*WRITE KEY LESS*/
             GRAMH= 'FOR WRITE, KEY IS OUTSIDE THE LIMITS OF THE '!!    !
                   'DATA SET : '!!KEYNUM2!!KEYDATE2;
           WHEN ( 92 )                               /* INVALID OPEN */
             GRAMH= 'ERROR FOUND BY O.S. ON ATTEMPT TO OPEN : '!!
                   'CHECK2D';
           WHEN ( 93 )                               /* INVALID OPEN */
             GRAMH= 'ERROR FOUND BY VSAM ON ATTEMPT TO OPEN : '!!
                   'CHECK2D';
           OTHERWISE
             GRAMH= ' APXEIO ( CHECK2D )  ONCODE : '!!ONCODE!!
                      ' KÀ≈…ƒ… : '!!KEYNUM2!!KEYDATE2;
        END; /* SELECT */
        WRITE FILE ( PRT ) FROM ( LINE );

        CLOSE  FILE ( CHECK2D ), FILE ( PRT );
        STOP ;              /* CAUSES RETURN CODE 1000 !!!  */
      END; /* BEGIN */
  /*------------------------------------------------------------------*/
  /*=========    A P X H   – P O √ P A M M A T O ”  ==================*/
  OPEN FILE(CHECK2);
  OPEN FILE(CHECK2D);

  CTLCHR = '0';

  READ  FILE ( CHECK2  ) INTO  (IOAREA); /*READ FIRST HEADER*/

  DO WHILE  ( EOF = 0 );
     IF ( SUBSTR(IOAREA,1,3) ^= '000' ) &
        ( SUBSTR(IOAREA,4,1)='8' ! SUBSTR(IOAREA,4,1)='9') THEN DO;
     READ_KATMA    = SUBSTR(IOAREA ,1 ,3);
     CNT_REC_READ  = CNT_REC_READ+ 1;
     PEK_FLG       = IS_PEK(READ_KATMA);
     IF (EETYPE1 = '1') THEN DO ; /*HERE HEADER RECORDS ONLY*/
        SAVE_HEADER = IOAREA;
        CNT_REC_PROCCED = CNT_REC_PROCCED + 1 ;
        CNT_HEADER      = CNT_HEADER + 1 ;
        IF PEK_FLG > 0 THEN DO;/* PEK_FLG > 0 ‘o Í·Ù‹ÛÙÁÏ· ÂﬂÌ·È –≈ */
           PINAX_PEK(PEK_FLG).PEK_IO       = IOAREA;
           PINAX_PEK(PEK_FLG).PEK_MAX      = 0;
 /* PEK_INS_UPD = 3 ÙÔ –≈  ıﬁÒ˜Â ÛÙÔ ·Ò˜ÂﬂÔ,ıÔ¯ﬁˆÈÔ „È· Update */
 /* Ò›ÂÈ Ì· ›˜ÂÈ ÂÈÛ·˜ËÂﬂ ÂÈÙ·„ﬁ Ôı ÙÔ ·ˆÔÒ‹ „È· Ì· „ﬂÌÂÈ Update */
           PINAX_PEK(PEK_FLG).PEK_INS_UPD  = 3;
           PINAX_PEK(PEK_FLG).PEK_EENUMB1  = EENUMB1; /*–À«»œ” ≈–…‘*/
           PINAX_PEK(PEK_FLG).PEK_EETOTAL1 = EETOTAL1;/*–œ”œ ≈–…‘¡√*/
        END; /* PEK_FLG > 0 ‘o Í·Ù‹ÛÙÁÏ· ÂﬂÌ·È –≈ */
     END; /* HEADER RECORD */
     ELSE DO;/*HERE DETAIL RECORDS */
     /*Ã·Ú ≈Ì‰È·ˆ›ÒÔıÌ ÃœÕœÕ ÔÈ ÂÈÙ·„›Ú Í·Ù·ÛÙ. Ôı ƒ≈Õ ÂÈÌ·È PEK*/
         IF PEK_FLG = 0 THEN DO; /*detail:ÙÔ Í·Ù‹ÛÙÁÏ· ‰ÂÌ ÂÈÌai PEK*/
            CNT_REC_PROCCED =  CNT_REC_PROCCED + 1 ;
            CNT_DETAIL      =  CNT_DETAIL +  1;
            PIC_EEACCN2 = EEACCN2 ;
            RET_ERROR   = BELONGS_TO_PEK(PIC_EEACCN2,RET_KATMA);
         /*œ ÎÔ„·ÒÈ·ÛÏ¸Ú ·ÌﬁÍÂÈ ÛÂ Í·Ù·ÛÙÁÏ· –≈K,ÔÙ·Ì RET_ERROR = 0 */  /
            IF RET_ERROR = 0 THEN DO;
                ALLOCATE  MY_REC;
                MY_REC.C_KATMA  = RET_KATMA ;
                MY_REC.C_IOAREA = IOAREA;
                /*CALL  IS_NEW(RET_KATMA)  ; */
                /*”˝ÌÔÎÔ ÂÈÙ·„˛Ì „È· ÂÈÛ·„˘„ﬁ ÛÂ Í‹ÔÈÔ –≈ */
                COUNT_EPIT = COUNT_EPIT +1;
            END; /* IF RET_ERROR = 0*/
         END ;/* PEK_FLG = 0 */
         ELSE DO;/* PEK_FLG ^ 0 Detail:ÙÔ Í·Ù‹ÛÙÁÏ·  ÂÈÌai PEK*/
            DCL REC_AA PIC'(3)9';
            /*T· Ù›ÛÛÂÒ· ¯Áˆﬂ· ÂÈÌ·È Á ·ıÓÔıÛ· ·ÒﬂËÏÁÛÁ ÙÁÚ Â„„Ò·ˆﬁÚ*/
            /*œÏ˘Ú ı‹Ò˜ÔıÌ Í·È Í‹ÔÈÂÚ ÂÈÙ·„›Ú Ôı ÓÂÍÈÌ‹ÌÂ ÙÁÌ   */
            /*¡ÒﬂËÏÁÛÁ ·Ô ÙÔ 9000 Ô¸ÙÂ ·Ú ‰È·Î›ÓÔıÏÂ ÙÒÈ¯ﬁˆÈÔ     */
            REC_AA = SUBSTR(IOAREA,6,3);
            /*–‹ÒÂ ÙÁÌ ÏÂ„·Î˝ÙÂÒÁ ·ÒÈËÏÁÛÁ ÂÈÙ·„ﬁÚ-ÛÙÔ ‰Â‰ÔÏ›ÌÔ –EK*/
            IF PINAX_PEK(PEK_FLG).PEK_MAX < REC_AA  THEN
                  PINAX_PEK(PEK_FLG).PEK_MAX = REC_AA;
         END;/* PEK_FLG ^ 0TÔ Record ·ÌﬁÍÂÈ ÛÂ –≈  ÏÂ ·.·.PEK_FLG  */
      END;  /*DETAIL RECORD */
     END; /* SUBSTR(IOAREA,1,3) ^= '000'  */
     READ  FILE ( CHECK2  ) INTO  (IOAREA); /*READ AGAIN       */
   END;/* WHILE  ( EOF = 0 )*/


  IF COUNT_EPIT > 0 THEN DO;
    CALL LOAD_TABLE ;

   /***************************************************************/
   /****************  ≈ÂÓÂÒ„·Ûﬂ· ≈ÈÙ·„˛Ì             ************/
   /***************************************************************/
   DO IND = 1 TO PEK_LIMIT ;/*√È· ¸Î· Ù· Í·Ù·ÛÙﬁÏ·Ù· –≈  ...*/
      DO I = 1 TO COUNT_EPIT ;/*√È· ¸ÎÂÚ ÙÈÚ ÂÈÙ·„›Ú */
         IF ( EPITAGES(I).EPIT_KATMA =
              PINAX_PEK(IND).PEK_KATMA)  &
              (EPITAGES(I).EPIT_FOUND = 0) THEN DO;
             /*IOAREA = PINAX_PEK(IND).PEK_IO;npk 15-01-2009*/
             EPITAGES(I).EPIT_FOUND = 1;
             PINAX_PEK(IND).PEK_EENUMB1  =
                            PINAX_PEK(IND).PEK_EENUMB1  + 1;
             /*IOAREA = EPITAGES(I).EPIT_IO;npk 15-01-2009*/
             PINAX_PEK(IND).PEK_EETOTAL1 =
                            PINAX_PEK(IND).PEK_EETOTAL1 + EEAMOUNT;
 /* RESET KEYS   NPK 15-01-2009                              */
             /*IOAREA = PINAX_PEK(IND).PEK_IO;npk 15-01-2009*/
 /* PEK_INS_UPD = 2 ÙÔ –≈  ‰ÂÌ ıﬁÒ˜Â ÛÙÔ ·Ò˜ÂﬂÔ,»¡ ÂÈÛ·˜ËÂﬂ */
             IF  PINAX_PEK(IND).PEK_INS_UPD = 0 THEN
                        PINAX_PEK(IND).PEK_INS_UPD = 2 ;
 /* PEK_INS_UPD = 3 ÙÔ –≈   ıﬁÒ˜Â ÛÙÔ ·Ò˜ÂﬂÔ,»¡ „ÈÌÂÈ UPDATE */
             IF  PINAX_PEK(IND).PEK_INS_UPD = 3 THEN
                        PINAX_PEK(IND).PEK_INS_UPD = 1 ;
             CALL WRITE_EPITAGI;
         END;/*  IF (EPITAGES(I)             */
      END;/* DO I = 1 TO COUNT_EPIT          */
   END; /*DO IND = 1 TO PEK_LIMIT ; */

   /***************************************************************/
   /****************  ≈ÂÓÂÒ„·Ûﬂ·  ·Ù·ÛÙÁÏ‹Ù˘Ì         ************/
   /***************************************************************/
   DO IND = 1 TO PEK_LIMIT ;/*√È· ¸Î· Ù· Í·Ù·ÛÙﬁÏ·Ù· –≈  ...*/
          IF  PINAX_PEK(IND).PEK_INS_UPD = 1 THEN
                   CALL UPDATE_PEK;/*TÔ Í·Ù‹ÛÙÁÏ· ıﬁÒ˜Â ÛÙÔ check2*/
          IF  PINAX_PEK(IND).PEK_INS_UPD = 2 THEN
              CALL INSERT_PEK;/*‘Ô Í·Ù‹ÛÙ.‰ÂÌ ıﬁÒ˜Â,Ë· ÂÈÛ·˜ËÂﬂ*/
   END; /*DO IND = 1 TO PEK_LIMIT ; */

  END; /* IF COUNT_EPIT > 0*/
  ELSE GOTO TELOS;
  /*==================================================================*/

  /*************************************************************/
  /* LOAD_TABLE     START                                      */
  /*************************************************************/
  LOAD_TABLE   :PROC ;

   DCL K FIXED(15) INIT(0);
   ALLOCATE EPITAGES(COUNT_EPIT);
   /*LOAD REVERSE */
   DO K = COUNT_EPIT TO 1 BY -1 ;
        EPITAGES(K).EPIT_KATMA = MY_REC.C_KATMA ;
        EPITAGES(K).EPIT_IO    = MY_REC.C_IOAREA ;
        EPITAGES(K).EPIT_FOUND = 0          ;
        FREE MY_REC ;/*RELEASE A GENERATION*/
   END;
  END LOAD_TABLE    ;
  /*************************************************************/
  /* LOAD_TABLE     END                                        */
  /*************************************************************/
  /*************************************************************/
  /* WRITE_EPITAGI  START                                      */
  /*************************************************************/
  WRITE_EPITAGI:PROC ;

  DCL 1 KEYNUM2_R          BASED(ADDR(NEW_KEY)),
       2 KEY_KATMA  PIC'(3)9',
       2 KEY_9      PIC'(1)9',
       2 KEY_XXXX   PIC'(1)9',
       2 KEY_COUNT  PIC'(3)9',
       2 KEYDATE_R  CHAR(6)  ;
       /*                           ﬂ */
       PINAX_PEK(IND).PEK_MAX =PINAX_PEK(IND).PEK_MAX+ 1;
       /* ÷ÙÈ‹ÓÂ ÙÔ  ·ÈÌÔ˝Ò„ÈÔ  ÎÂÈ‰ﬂ */
       KEY_KATMA  = PINAX_PEK(IND).PEK_KATMA;
       KEY_9      = SUBSTR(EPITAGES(I).EPIT_IO,4,1);/*keep 4 byte*/
       KEY_XXXX   = 2 ;
       KEY_COUNT  = PINAX_PEK(IND).PEK_MAX ;
       KEYDATE_R  = SUBSTR(EPITAGES(I).EPIT_IO,9,6);

       /* ¡ÌÙÈÍ·Ù‹ÛÙ·ÛÁ –·Î·ÈÔ˝  ÎÂÈ‰ÈÔ˝ ÏÂ ÙÔ  ·ÈÌÔ˝Ò„ÈÔ  */
       SUBSTR(EPITAGES(I).EPIT_IO,1,14) = NEW_KEY;
       PUT SKIP LIST('NPK WRITE_EPITAGI ',NEW_KEY         );
       WRITE FILE (CHECK2D) FROM(EPITAGES(I).EPIT_IO) KEYFROM(NEW_KEY) ;

        CNT_EPITAGON  = CNT_EPITAGON+ 1;
  END WRITE_EPITAGI ;
  /*************************************************************/
  /* WRITE_EPITAGI  END                                        */
  /*************************************************************/
  /*************************************************************/
  /* INSERT_PEK     START                                      */
  /*************************************************************/
  INSERT_PEK   :PROC ;

    /* ÷ÙÈ‹ÓÂ ÙÔ  ·ÈÌÔ˝Ò„ÈÔ  ÎÂÈ‰ﬂ */
    IOAREA = SAVE_HEADER;
    KEYKATMA1  =   PINAX_PEK(IND).PEK_KATMA;
    KEYFILL    =   SUBSTR(IOAREA,4,5);
    KEYDATE1   =   SUBSTR(IOAREA,9,6);
    EENUMB1    =   PINAX_PEK(IND).PEK_EENUMB1;
    EETOTAL1   =   PINAX_PEK(IND).PEK_EETOTAL1;
    PUT SKIP LIST('*** INSERT_PEK ********************');
    PUT SKIP LIST('NPK INSERT_PEK EEKEY1 ' , EEKEY1         );
    PUT SKIP LIST(' KEYKATMA1  =         ' , KEYKATMA1      );
    PUT SKIP LIST(' KEYFILL    =         ' , KEYFILL        );
    PUT SKIP LIST(' KEYDATE1   =         ' , KEYDATE1       );
    PUT SKIP LIST(' EENUMB1    =         ' , EENUMB1        );
    PUT SKIP LIST(' EETOTAL1   =         ' , EETOTAL1       );
    PUT SKIP LIST('***********************************');

    WRITE FILE (CHECK2D) FROM(IOAREA)  KEYFROM( EEKEY1 ) ;
    CNT_INSERTED_PEK   = CNT_INSERTED_PEK + 1;
  END INSERT_PEK    ;
  /*************************************************************/
  /* INSERT_PEK     END                                        */
  /*************************************************************/
  /*************************************************************/
  /* UPDATE_PEK     START                                      */
  /*************************************************************/
  UPDATE_PEK   :PROC ;

       /* ÷ÙÈ‹ÓÂ ÙÔ  ·ÈÌÔ˝Ò„ÈÔ  ÎÂÈ‰ﬂ */
    IOAREA     =   SAVE_HEADER;
    KEYKATMA1  =   PINAX_PEK(IND).PEK_KATMA;
    KEYFILL    =   SUBSTR(IOAREA,4,5);
    KEYDATE1   =   SUBSTR(IOAREA,9,6);
    EENUMB1    =   PINAX_PEK(IND).PEK_EENUMB1;
    EETOTAL1   =   PINAX_PEK(IND).PEK_EETOTAL1;
    PUT SKIP LIST('*** UPDATE_PEK ********************');
    PUT SKIP LIST('NPK UPDATE_PEK EEKEY1 ' , EEKEY1         );
    PUT SKIP LIST(' KEYKATMA1  =         ' , KEYKATMA1      );
    PUT SKIP LIST(' KEYFILL    =         ' , KEYFILL        );
    PUT SKIP LIST(' KEYDATE1   =         ' , KEYDATE1       );
    PUT SKIP LIST(' EENUMB1    =         ' , EENUMB1        );
    PUT SKIP LIST(' EETOTAL1   =         ' , EETOTAL1       );
    PUT SKIP LIST('***********************************');

    CNT_UPDATED_PEK  = CNT_UPDATED_PEK + 1;

    PUT SKIP LIST('NPK UPDATE_PEK    ',EEKEY1          );
    REWRITE FILE (CHECK2D) FROM(IOAREA) KEY( EEKEY1 ) ;
  END UPDATE_PEK    ;
  /*************************************************************/
  /* UPDATE_PEK     END                                        */
  /*************************************************************/
  /*************************************************************/
  /* BELONGS_TO_PEK  START                                      */
  /* ƒÔË›ÌÙÔÚ ÀÔ„·ÒÈ·ÛÏÔ˝ ≈ÈÛÙÒ›ˆÂÈ Í˘‰ÈÍ¸  ·Ù·ÛÙﬁÏ·ÙÔÚ –≈    */
  /* ≈ÈÛÙÒ›ˆÂÈ 0 = ”˘ÛÙ¸,1 ¸Ù·Ì ÂﬂÌ·È À‹ËÔÚ                   */
  /*************************************************************/
  /* –ÒÔÛÔ˜ﬁ : Ã¸ÌÔ Ù· Í·Ù·ÛÙﬁÏ·Ù· ÏÂ Í˘‰ÈÍ¸ 0649,EŸ” ,0658    */
  /*           »Â˘ÒÔ˝ÌÙ·È –≈  ÛﬁÏÂÒ· ÙÁÌ 28-09-2007            */
  /*************************************************************/
  /*-NPK 03-01-2008 Õ≈œ…  Ÿƒ… œ… 643,644,646,655,656  ----------*/
  /*************************************************************/
  BELONGS_TO_PEK: PROC(IN_LOGAR,OUT_KATMA) RETURNS (FIXED(1));

    DCL IN_LOGAR   PIC '(8)9';
    DCL OUT_KATMA  CHAR(3)   ;
    DCL RC FIXED (1) INIT(9) ;
    T04CNV97.NUM_AR_LOGAR = IN_LOGAR !!'        01';

    EXEC SQL
       SELECT COD_BRA_RESP_G
       INTO :CTHBCUDE.COD_BRA_RESP_G
       FROM CTHBCUDE
       WHERE CTHBCUDE.COD_BRA_RESP_G IN
            ( '0649','0650','0651','0640','0641',
            '0647','0648','0652','0653','0654',
            '0643','0644','0646','0655','0656',
            '0657','0658','0659','0639','0642','0645')
       AND   CTHBCUDE.COD_CUSTOMER     =
            ( SELECT COD_PELATH
              FROM T04CNV97
              WHERE COD_EFARM ='70'
              AND NUM_AR_LOGAR = :T04CNV97.NUM_AR_LOGAR )
    WITH UR ;
    IF (SQLCODE ^= 0 )                     THEN  DO;
            OUT_KATMA = ''; RC = 1;
            GRAMH = '–—œ¬À«Ã¡ : ≈’—≈”« –≈À¡‘« ”‘œÕ T04CNV97 : '         !!
                   !!' A—…»Ã.Àœ√¡—. '
                   !! CHAR(T04CNV97.NUM_AR_LOGAR)
                   !!'  SQLCODE  : '!!SQLCODE;
            IF SQLCODE ^= 100    THEN /* ONLY REAL ERRORS */
                         WRITE FILE(PRT) FROM(LINE);
    END;
    ELSE DO ;
            OUT_KATMA = SUBSTR(COD_BRA_RESP_G ,2,3 );
            RC = 0;
    END;

    RETURN (RC);

   END BELONGS_TO_PEK;
 /*************************************************************/
 /* BELONGS_TO_PEK END                                        */
 /*************************************************************/
 /*************************************************************/
 /* IS_PEK         START                                      */
 /* ≈ÈÛÙÒ›ˆÂÈ 0 ·Ì ‰ÂÌ ÂﬂÌ·È –≈  ÙÔ  ·Ù‹ÛÙÁÏ· Í·È   Â‹Ì ÂﬂÌ·È*/
 /* ÔÔı   Á Ë›ÛÁ ÙÔı Í˘‰ÈÍÔ˝ Í·Ù·ÛÙﬁÏ·ÙÔÚ ÛÙÔÌ ÈÌ·Í· PINAX_PEK*/
 /*************************************************************/
 /* –ÒÔÛÔ˜ﬁ : Ã¸ÌÔ Ù· Í·Ù·ÛÙﬁÏ·Ù· ÏÂ Í˘‰ÈÍ¸ 0649,0650,0651    */
 /*           »Â˘ÒÔ˝ÌÙ·È –≈  ÛﬁÏÂÒ· ÙÁÌ 28-09-2007            */
 /*************************************************************/
  IS_PEK :PROC (IN_KATMA) RETURNS(FIXED(3));

    DCL IN_KATMA  CHAR(3)   ;
    DCL RC FIXED (3) INIT(0) ;
    DCL K  FIXED (3) INIT(0) ;
    DO K = 1          TO PEK_LIMIT;
        IF PINAX_PEK(K).PEK_KATMA  =  IN_KATMA  THEN
            RC  =  K   ;

    END;/*DO END*/

    RETURN (RC);

  END IS_PEK        ;
 /*************************************************************/
 /* IS_PEK         END                                        */
 /*************************************************************/
 /*==================================================================*/
  TELOS: ;
  FREE EPITAGES ;
  CTLCHR = '1';
  GRAMH = 'EM–OPIKH TPA–EZA TH” EÀÀAƒO”                     '
               !!' *** BE101           ***';
  WRITE FILE(PRT) FROM(LINE);
  DCL MY_DATETIME PIC '9999.99.99B9999' ;
      MY_DATETIME = SUBSTR(DATETIME(),1,12);
  GRAMH = 'HÏ›Ò· Í·È ŸÒ· —ÔﬁÚ :                             '
               !!char(DATETIME());
  GRAMH = 'HÏ›Ò· Í·È ŸÒ· —ÔﬁÚ :                             '
               !!MY_DATETIME;
  WRITE FILE(PRT) FROM(LINE);
  CTLCHR = ' ';
  GRAMH = 'ƒÈ·‚‹ÛËÁÍ·Ì '!! CNT_REC_READ !!' ≈„„Ò·ˆ›Ú ';
  WRITE FILE(PRT) FROM(LINE);
  GRAMH = '≈ÂÓÂÒ„‹ÛËÁÍ·Ì '!!CNT_REC_PROCCED!!' ≈„„Ò·ˆ›Ú ';
  WRITE FILE(PRT) FROM(LINE);
  GRAMH = '≈ÂÓÂÒ„‹ÛËÁÍ·Ì '!!CNT_HEADER     !!' ≈„„Ò·ˆ›Ú  ·Ù·ÛÙÁÏ‹Ù˘Ì';
  WRITE FILE(PRT) FROM(LINE);
  GRAMH = '≈ÂÓÂÒ„‹ÛËÁÍ·Ì '!!CNT_DETAIL     !!' ≈„„Ò·ˆ›Ú ≈ÈÙ·„˛Ì    ';
  WRITE FILE(PRT) FROM(LINE);
  GRAMH = '”˝ÌÔÎÔ ≈ÈÙ·„˛Ì „È· ÂÈÛ·„˘„ﬁ : '!! CNT_EPITAGON;
  WRITE FILE(PRT) FROM(LINE);
  GRAMH = '”˝ÌÔÎÔ K·Ù·ÛÙÁÏ.–≈  „È· ÂÈÛ·„˘„ﬁ : '!!CNT_INSERTED_PEK;
  WRITE FILE(PRT) FROM(LINE);
  GRAMH = '”˝ÌÔÎÔ K·Ù·ÛÙÁÏ.–≈  „È· Update: '!!CNT_UPDATED_PEK;
  WRITE FILE(PRT) FROM(LINE);

  CLOSE FILE(CHECK2D);
  CLOSE FILE(CHECK2);

  END BE101;
